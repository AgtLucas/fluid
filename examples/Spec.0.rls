;; single line comment

;; meta information

; colorless version
@version 0.0.0

;; encoding and primitive types

unit
u8, u16, u32, u64
i8, i16, i32, i64
f32, f64
bool
char
str
int
neg
nonneg
nonzero
nat
rat

;; builtin sum types and collections

Option a
Either a b
List a
Map key value
Array (size: nat) b
MinList (minSize: nat) b

;; tags

#Tag
#AnotherTag

;; function declaration

echo str: str

;; type aliases

Name: str
Years: nonneg
Years: Years

; type alias with a phantom type

Id a: str

;; product types

Person
  name: Name

Parents
  mother: Id Person
  father: Id Person

;; more function declarations

age (Id Person): Years
parents (Id Person): Parents

; function declaration with minimally sized list, array of size 7, and a tag

foo (MinList 2 str) bool char: Array 7 Person
  #Tag

;; types

; sum type

Color
  Red
  Blue
  Yellow
  Green

; product type

Item
  name: Name
  color: Color

; product type with two phantom types

Ownership
  person: Id Person
  item: Id Item

; product type with a tag

Circle
  center: Point f64
  radius: f64
  #AnotherTag

; product types can have polymorphic variables and be used before declaration

Point a
  x: a
  y: a

; encoding types can be used as constraints
A (a: str)
  b: i32
  c: f32

D
  E (A "hello")
  F (A "bye")

; sum type with polymorphic variables

Shape a b
  Circle Circle
  Rectangle (Point a) (Point a)
  Polygon (MinList 3 (Point b))

;; import hooks

; opaque type

> Suit
> Rank

; tag

> #ImportedTag

; opaque types and tags

> A, B, #C, D, E

> Example

; imports used locally

Card
  suit: Suit
  rank: Rank

higherCard Card Card: Card
  #ImportedTag
