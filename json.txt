////
// Colorless
// arg name is req for primitive types
reverse(a: str): str;

// JSON Req
{
  "_fn": "reverse",
  "_args": {
    "a": "hello"
  }
}

// JSON Resp
"olleh"

////
// Colorless
age(Id Person): Years;

// JSON Req
// the `id` arg name is generated by the opaque name
{
  "_fn": "age",
  "_args": {
    "id": "some id as a string"
  }
}

// JSON Resp
7

////
// Colorless
// arg names are req because there's more than one of the same type as an arg.
different(a: Id Person, b: Id Person): bool;

// JSON Req
{
  "_fn": "different",
  "_args": {
    "a": "a person id",
    "b": "another person id"
  }
}

// JSON Resp
true

////
// Colorless
circleArea(Circle): f64;

Circle: {
  center: Point f64,
  radius: f64,
};

Point a: {
  x: a,
  y: a,
};

// JSON Req
{
  "_fn": "circleArea",
  "_args": {
    "circle": {
      "center": {
        "x": 0.0,
        "y": 0.0
      },
      "radius": 10.10
    }
  }
}

// JSON Resp
320.3114

////
// Colorless
Color: Red, Blue, Yellow, Green;

enemy(you: Color): Color;

// JSON Req
{
  "_fn": "enemy",
  "_args": {
    "you": { "Red": null }
  }
}

// JSON Resp
{
  "Blue": null
}

// JSON Req (chained)
{
  "_fn": "enemy",
  "_args": {
    "you": { "_fn": "enemy", "_args": { "you": "Red": null } }
  }
}

// JSON Resp (chained)
{
  "Red": null
}


////
// Colorless
foo(Either int str): bool;

// JSON Req
{
  "_fn": "foo",
  "_args": {
    "either": { "Left": [ 100 ] }
  }
}

// JSON Resp
false
